AWSTemplateFormatVersion: 2010-09-09
Description: Scratch template for enabling security hub

Parameters:
  UniqueName:
    Default: cloudops
    Description: A unique prefix given to all of the AWS resources
    Type: String

Resources:
  CloudTeamHub:
    Type: AWS::SecurityHub::Hub
  InviteNewMemberRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Description: String
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - securityhub:BatchEnableStandards
            - securityhub:CreateMembers
            - securityhub:DeleteMembers
            - securityhub:Describe*
            - securityhub:Get*
            - securityhub:InviteMembers
            - securityhub:List*
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:securityhub:${AWS::Region}:${AWS::AccountId}:hub/default
          - Action:
            - organizations:ListAccounts
            Effect: Allow
            Resource: '*'
        PolicyName: InviteNewMembersLambdaPolicy
      RoleName: InviteNewMembersLambdaRole

  InviteNewMemberAccount:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: david-securityhub-artifacts-bucket-us-east-1
        S3Key: c664d684c8bd45a27c04477487c2fd70
      Description: Invites Member Account to Security Hub
      Environment:
        Variables:
          TARGET_ROLE:
            Fn::Sub: ${UniqueName}-SecurityHubAcceptInviteRole
      Handler: index.lambda_handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - InviteNewMemberRole
        - Arn
      Runtime: python3.8

Outputs:
  SecurityHubArn:
    Value:
      Ref: CloudTeamHub
